<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kanglian.healthcare.back.dal.dao.AskQuestionAnswerDao">
	<select id="getListByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="columns"/>
		from ask_question_answer t
		where t.user_id = #{userId,jdbcType=INTEGER}
		order by t.add_time desc
	</select>
	
	<select id="getListByMessageId" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			t.id,
			t.message_id,
			t.patient_record_id,
			t.user_id,
			t.to_user,
			t.title,
			t.question,
			t.answer,
			t.`status`,
			t.add_time,
			t.last_update_dtime,
			u1.real_name AS patientRealName,
			u2.real_name AS doctorRealName,
			t2.src,
			t2.remark
			,(3 - t1.replyNum) retryNum
		FROM
			ask_question_answer t
		LEFT JOIN upload_patient t2 ON t2.question_id = t.id
		LEFT JOIN `user` u1 ON u1.user_id = t.user_id
		LEFT JOIN `user` u2 ON u2.user_id = t.to_user
		LEFT JOIN (
			SELECT
				max(t.id) AS id,
				message_id AS messageId,
				COUNT(t.message_id) replyNum
			FROM
				ask_question_answer t
			GROUP BY
				t.message_id
			ORDER BY
				t.add_time DESC
		) t1 ON t.message_id = t1.messageId
		WHERE t.message_id=#{messageId,jdbcType=VARCHAR}
		ORDER BY t.add_time asc
	</select>
	
	<!-- 获取最新一条回复数据 -->
	<select id="frontList" resultMap="BaseResultMap" parameterType="com.easyway.business.framework.mybatis.query.ConditionQuery">
		SELECT
			t.id,
			t.message_id,
			t.patient_record_id,
			t.user_id,
			t.to_user,
			t.title,
			t.question,
			t.answer,
			t.`status`,
			t.add_time,
			t.last_update_dtime,
			u1.real_name AS patientRealName,
			u2.real_name AS doctorRealName,
			up1.thumbnail_pic AS patientImageUrl,
			up2.thumbnail_pic AS doctorImageUrl,
			t2.src,
			t2.remark
			,(3 - t1.replyNum) retryNum
		FROM
			ask_question_answer t
		LEFT JOIN upload_patient t2 ON t2.question_id = t.id
		LEFT JOIN `user` u1 ON u1.user_id = t.user_id
		LEFT JOIN `user` u2 ON u2.user_id = t.to_user
		LEFT JOIN user_pic up1 ON up1.user_id = t.user_id
		LEFT JOIN user_pic up2 ON up2.user_id = t.to_user
		INNER JOIN (
			SELECT
				max(t.id) as id,
				COUNT(t.message_id) replyNum
			FROM
				ask_question_answer t
			GROUP BY
				t.message_id
			<![CDATA[
			HAVING
				replyNum <= 3
			]]>
			ORDER BY
				t.add_time DESC
		) t1 ON t1.id = t.id
		<include refid="conditionQuery.core" />
		order by
		<choose>
		<when test="paramMap.orderCol!=null">
		${paramMap.orderCol}
		</when>
		<otherwise>
		id desc
		</otherwise>
		</choose>
		<if test="paramMap.pageSize > 0">
		  limit #{paramMap.pageOffset},#{paramMap.pageSize}
		</if>
	</select>
	
	<!-- 超过三天未处理列表 -->
	<select id="getListOverThreeday" resultMap="BaseResultMap">
		SELECT
			<include refid="columns"/>
		FROM
			ask_question_answer t
		WHERE
			t.`status` = 1
		AND
		<![CDATA[
		IF (
			(
				t.last_update_dtime IS NOT NULL
				AND t.last_update_dtime <> ''
			),
			datediff(now(), t.last_update_dtime) > 3,
			datediff(now(), t.add_time) > 3
		)
		]]>
		ORDER BY
			last_update_dtime DESC
	</select>
	
	<!-- 更新超过三天未处理列表状态 -->
	<update id="updateStatusOverThreeday">
		UPDATE ask_question_answer
		SET 
			`status` = 2, 
			close_time = NOW()
		WHERE
			`status` = 1
		AND
		<![CDATA[
		IF (
			(
				last_update_dtime IS NOT NULL
				AND last_update_dtime <> ''
			),
			datediff(now(), last_update_dtime) > 3,
			datediff(now(), add_time) > 3
		)
		]]>
	</update>
	
	<!-- 批量更新状态 -->
	<update id="batchUpdate" parameterType="java.util.List">  
	    <foreach collection="list" item="item" separator=";">
	        update ask_question_answer
	        <set>
	            `status` = 2,
	            close_time = NOW()
	        </set>
	        where id = ${item.id}
	    </foreach>      
	</update>
	
	<!-- 
	 1）发了多个问题，都未回复
	 2）发了多个问题，只回复其中一个（不退款）
	 3）发了一个问题，未回复
	 -->
	<!-- 超过三天未处理，未回复列表[退款] -->
	<select id="getListOverThreedayUnAnswer" resultMap="BaseResultMap">
		SELECT
			<include refid="columns"/>
		FROM
			ask_question_answer t
		WHERE 
			(
				t.answer IS NULL
				OR t.answer = ''
			)
		AND
		IF (
			(
				t.last_update_dtime IS NULL
				OR t.last_update_dtime = ''
			),
			datediff(now(), t.add_time) > 3,
			datediff(now(), t.last_update_dtime) > 3
		)
		<![CDATA[
		AND NOT EXISTS (
			SELECT
				t0.message_id
			FROM
				ask_question_answer t0
			WHERE
				(
					t0.answer IS NOT NULL
					AND t0.answer <> ''
				)
			AND t0.message_id = t.message_id
		)]]>
	</select>
</mapper>
