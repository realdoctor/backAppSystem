<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd           
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	  http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- 线程池配置 -->
	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="50" />
		<!-- 队列最大长度 -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

	<!-- 设置调度 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<property name="triggers">
			<list>
				<ref bean="codeRefreshTaskTrigger" />
				<ref bean="dataimportTaskTrigger" />
				<ref bean="overdueQuestionTaskTrigger" />
				<ref bean="refundOverdueQuestionTaskTrigger" />
			</list>
		</property>
		<property name="taskExecutor" ref="executor" />
	</bean>

	<!-- 字典码表刷新 start -->
	<bean id="codeRefreshTask" class="com.kanglian.healthcare.quartz.task.CodeRefreshTask"></bean>
	<bean id="codeRefreshTaskDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="codeRefreshTask" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="codeRefreshTaskTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="codeRefreshTaskDetail" />
		<property name="cronExpression" value="0 0 23 L * ?" />
	</bean>
	<!-- 字典码表刷新 end -->
	
	<!-- 处理要过期问题 start -->
	<bean id="overdueQuestionTask" class="com.kanglian.healthcare.quartz.task.OverdueQuestionTask"></bean>
	<bean id="overdueQuestionTaskDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="overdueQuestionTask" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="overdueQuestionTaskTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="overdueQuestionTaskDetail" />
		<property name="cronExpression" value="0 0/30 * * * ?" />
	</bean>
	<!-- 处理要过期问题 end -->
	
	<!-- 处理过期退款 start -->
	<bean id="refundOverdueQuestionTask" class="com.kanglian.healthcare.quartz.task.RefundOverdueQuestionTask"></bean>
	<bean id="refundOverdueQuestionTaskDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="refundOverdueQuestionTask" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="refundOverdueQuestionTaskTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="refundOverdueQuestionTaskDetail" />
		<property name="cronExpression" value="0 0 23 * * ?" />
	</bean>
	<!-- 处理过期退款 end -->
	
	<!-- 数据导入 start -->
	<bean id="dataimportTask" class="com.kanglian.healthcare.quartz.task.DataimportTask"></bean>
	<bean id="dataimportTaskDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dataimportTask" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="dataimportTaskTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="dataimportTaskDetail" />
		<property name="cronExpression" value="0 0/10 * * * ?" />
	</bean>
	<!-- 数据导入  end -->
</beans>