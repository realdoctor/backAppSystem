<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-4.3.xsd">

	<!-- 启用默认配置 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>WriteNullListAsEmpty</value>
                        <value>QuoteFieldNames</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
			<bean class="com.kanglian.healthcare.inteceptor.CurrentUserMethodArgumentResolver" />
		</mvc:argument-resolvers>
    </mvc:annotation-driven>

	<!-- 使用注解开发，不用配置controller，需要配置一个组件扫描器 -->
	<context:component-scan base-package="com.kanglian.healthcare">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".html"></property>
	</bean>
	
	<!-- 上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="defaultEncoding" value="utf-8"/>
	    <!-- 最大内存大小 -->
	    <property name="maxInMemorySize" value="10240"/>
	    <!-- 最大文件大小，-1为不限制大小 -->
	    <property name="maxUploadSize" value="-1"/>
	</bean>

	<mvc:cors>
        <mvc:mapping path="/**" allowed-origins="*" allow-credentials="true" max-age="1800" allowed-methods="GET,POST,OPTIONS"/>
    </mvc:cors>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**，将拦截所有的Controller -->  
	        <mvc:mapping path="/**" />
	        <bean class="com.kanglian.healthcare.inteceptor.AuthorizationInterceptor"></bean>
	    </mvc:interceptor>  
    	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 --> 
	</mvc:interceptors>
    
    <!-- 启动对@AspectJ注解的支持  -->
    <aop:aspectj-autoproxy expose-proxy="true"/>
    <!-- 处理静态资源被"/"所拦截的问题 -->
    <mvc:default-servlet-handler/>
</beans>